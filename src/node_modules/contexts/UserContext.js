import React from 'react';
import {withRouter} from 'react-router-dom';
import {useCookies} from 'react-cookie';
import apiClient from 'apiClient'


const defaultValue = {
  me: null,
  token: '',
  login: () => console.log('asdfadsf')
}

const UserContext = React.createContext(defaultValue);

export const UserProvider = withRouter((props) => {
  const [user, setUser] = React.useState({
    me: null,
    login: () => console.log('login'),
  });
  const [cookies] = useCookies();

  React.useEffect(() => {
    if (!cookies.token && !props.location.pathname.includes('/login')) {
      props.history.replace('/login');
    }

    if (!user.me) {
      apiClient.defaults.headers.common = {
        Authorization: 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6IjUzODRiYzNjNWYxNjhmZDg0MDNlZjdlYjdlNjlkZDI3YzZiMTkxYWMwZDU1ZDRhNjM2MDMxYTk0ZjczMDNlZmUyNjIwZTAwZDY4ZDZkYTFjIn0.eyJhdWQiOiIyIiwianRpIjoiNTM4NGJjM2M1ZjE2OGZkODQwM2VmN2ViN2U2OWRkMjdjNmIxOTFhYzBkNTVkNGE2MzYwMzFhOTRmNzMwM2VmZTI2MjBlMDBkNjhkNmRhMWMiLCJpYXQiOjE1NjcyNDgxODgsIm5iZiI6MTU2NzI0ODE4OCwiZXhwIjoxNTk4ODcwNTg4LCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.Hgb8F9q5ZzBAEiEav7ZNlRNv4DssXOrFxwx9HUx0uhIfhfy2U2m61AIMfW0plNeZRVTnJz79RCEv80iNxzKNxqd22m-kXcCAJSyt1dIVPq_x-B-orjPi0EkpoVvVUcaVNBV8zMC5VLBThEyqV8SGCZ3qpGZkvJRro87Jka10GvZR-KwcFR6a21BxeJnsZwshW_PyPfZztd09eXY2M0buBZK-FUiZG7CmdmJvAjP8_HZPc3fZdNbINxu6u693vsmSEd13S01JOHj99NJ3HU7eDUPtTgl_OANaqY6yHzu7YhocnFwV_ToHE5cVa-XZaK-x7HD3jigFjMGKOfeff-W_wSpqnEgABmVVIxeaYUlkAVERpHHy_YznM0hpG8ZQsHEPshSr2uDPZmADVEqStrFR4wAe4Kp_7GSslzQGd4hSZoGBSWJZiMXHhiFprl850bqFnhvg8Je8LSylZYAI4Z4aBZ3RiF16ediMDxfnlXiWQamxwGtpMmecJcTJsW-H0Vu7AhCATBAv2mXBlbEIpqd7tlTBGikDZyCiviOjYKv8FIVcxT8NveUcCji5ZYsvJRRxcp2sursBKQlSHaS2QwN0KfAZ6jQWFBWscQTwrbg6bBtviO-jlw7VWAuy4KVEj77X3hTigym_wuHm3wWMAOfxIbNEHwetfY2PzvpsHCX1S2E'
      }

      apiClient.get('/api/me').then(res => {
        setUser({
          ...user,
          me: res.data,
        });
      }).catch(err => console.log('err', err))
    }

    // axios.post('http://localhost:8000/oauth/token', {
    //   grant_type: "password",
    //   client_id: process.env.REACT_APP_API_CLIENT_ID,
    //   client_secret: process.env.REACT_APP_API_CLIENT_SECRET,
    //   username: "admin@gmail.com",
    //   password: "dlfjs"
    // }).then(res => {
    //   console.log('RES', res);
    // }).catch(err => {
    //   console.log('ERR', err);
    // });
  });


  return (
    <UserContext.Provider value={user}>{props.children}</UserContext.Provider>
  )
});

export default UserContext;
