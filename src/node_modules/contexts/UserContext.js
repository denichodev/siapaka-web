import React from 'react';
import {withRouter} from 'react-router-dom';
import {useCookies} from 'react-cookie';
import apiClient from 'apiClient'


const defaultValue = {
  me: null,
  token: '',
  login: () => console.log('asdfadsf')
}

const UserContext = React.createContext(defaultValue);

export const UserProvider = withRouter((props) => {
  const [user, setUser] = React.useState({
    me: null,
    login: () => console.log('login'),
  });
  const [cookies] = useCookies();

  React.useEffect(() => {
    if (!cookies.token && !props.location.pathname.includes('/login')) {
      props.history.replace('/login');
    }

    if (!user.me) {
      apiClient.defaults.headers.common = {
        Authorization: 'Bearer yJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImp0aSI6ImE4YjBlMmMzZjNhMWUxMzExZmNiMzI2ZDQyMTM5NGVjODA2MmQ3NzQ2NmQ0ZWZhN2MxNDJlYTdlZjUxOTM4NmM4YzhmZTJjOGQ3MWY0ZTZkIn0.eyJhdWQiOiIyIiwianRpIjoiYThiMGUyYzNmM2ExZTEzMTFmY2IzMjZkNDIxMzk0ZWM4MDYyZDc3NDY2ZDRlZmE3YzE0MmVhN2VmNTE5Mzg2YzhjOGZlMmM4ZDcxZjRlNmQiLCJpYXQiOjE1Njc0MTg4MjEsIm5iZiI6MTU2NzQxODgyMSwiZXhwIjoxNTk5MDQxMjIxLCJzdWIiOiIxIiwic2NvcGVzIjpbXX0.Ny80lpwJoV7MOlVww5iwdPqolqeWFlcT3hZ90O4FGv8p07liTL_NxO1gLfQhsODMOmHeR34I4_KDDMZBcBx82p_x-Y49isej3R24RcOLrrSQJiF1KnaC7mSFhy90J3US2JVrbHaQd_EbodIvvH0sRPbQD1ZAgB1VspdNAkcNfFMkBvxJxZZbnB9uQsrxSiSMEAQQsD5nfaUYnb0hlraisE7P7TfOFwJPi2mlF0XPYq5ejuznIydMlyteOoVPdLcv0jLPO6Kka66vG7p7ZzAts5VhketsWvoCYCZLcEPKKRr_Pb_jsS5x0d3whXxYufLDYd8v9oBobMBrI8uH2iqgZ8XR3FLVNt4cNX3mkpq71KFb7DctETe0vA45sVar5Rlr0fYs8diMGAjX4-O5MlHb5qt030LL-FqjivbYQXoK3vrpuiqVirLK2R0SVRKYEK8nxrC4DYOX_pO9LcWek9EA6CGHk90fQJkfCyArGSibSanr6Avi7GXe6jWH8jHJmXahgnF3YV1DjmBnHHTLZEhwEOm1hj06pWw5bmURvk8DzxWHapO2WfBaWXLLcpRjtOs8kISDmIbranxlwCbE6uvqu0MI3jbqnzKPGNS8B8O_u4ClkvgnIlGyYDBeM8nxoG2jWC-j3VmR6sZzG6SoWNsnSuoTqGMJB-KCGJ-yu5t6MlQ'
      }

      apiClient.get('/api/me').then(res => {
        setUser({
          ...user,
          me: res.data,
        });
      }).catch(err => console.log('err', err))
    }
  });


  return (
    <UserContext.Provider value={user}>{props.children}</UserContext.Provider>
  )
});

export default UserContext;
